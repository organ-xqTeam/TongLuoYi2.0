package com.tly.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.tly.service.IEquipmentService;
import com.tly.service.IMemberService;
import com.tly.util.ScanServer;

/**
 * @author moxiuchuan
 * 会员控制器
 * 11点17分
 */
@Controller
@RequestMapping("/member")
public class MemberController {
	
	@Autowired
	private HttpServletRequest request;
	
	@Autowired
	private IMemberService ims;//会员服务
	
	@Autowired
	private IEquipmentService ies;//设备服务
	
	private String Equipmentnumber; //设备码

	/**
	 * 根据手机号查询会员id
	 * @return 存在：会员id 不存在：null
	 */
	@RequestMapping("/selectOneByPhone")
	@ResponseBody
	public Integer selectOneByPhone(String phonenum) {
		
		Integer mid = ims.selectOneByPhone(phonenum);

		System.out.println(mid);
		return mid;
	}
	
	/**
	 * 检查他应该付多少钱
	 * @return 钱数
	 */
	@RequestMapping("/selectMoneyByScan")
	@ResponseBody
	public Map selectMoneyByScan(String Equipmentnumber,int type,int mid) {
		
		Map map = new HashMap();
		this.Equipmentnumber = Equipmentnumber;
		//1.判断该设备的状态
		Integer state = selectStateByEquipmentnumber();
		if (state != 0) {
			//2.用户的角色
			if(type == 1){//假定维修工的类型为1，具体要统一###
				map.put("key", "memberType");
				map.put("value", 1);
				return map;
			}else{//不是维修工的时候
				//3.判断用户使用次数
				Integer sum = ims.selectUseSumByMid(mid);
				System.out.println("sum:"+sum);
				if(sum == 0){
					map.put("key", "money");
					map.put("value", 0);
					return map;
				}else if(sum == 1) {
					map.put("key", "money");
					map.put("value", 1);
					return map;
				}else {
					//收取正常价格
					Double money = ies.selectMoneyByEquipmentnumber(Equipmentnumber);
					System.out.println("应收价格："+money);
					map.put("key", "money");
					map.put("value", money);
					//创建任务线程用来执行提成办法和订单服务
					Thread t = new Thread(new ScanServer());
					t.start();
					return map;
				}
			}
		}else {
			map.put("key", "memberStatus");
			map.put("value", state);
			return map;
		}
	}
	
	/**
	 * 查询该设备是否可用
	 * @return 状态值
	 */
	@RequestMapping("selectStateByEquipmentnumber")
	@ResponseBody
	private Integer selectStateByEquipmentnumber() {
		// TODO Auto-generated method stub
		Integer state = ies.selectStateByEquipmentnumber(Equipmentnumber);
		if (state == 1 || state == 3 || state == 4) {
			return 0;
		}
		return state;
	}
	
}
